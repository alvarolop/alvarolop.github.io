[{"categories":["documentation"],"content":"This content is automatically populated using GH Actions. ","date":"2022-06-25","objectID":"/2022/06/2022-06-25-test-ci-cd/:0:0","tags":["content","Markdown","blog"],"title":"2022 06 25 Test Ci Cd","uri":"/2022/06/2022-06-25-test-ci-cd/"},{"categories":["documentation"],"content":"Build your blog with Hugo and GitHub Pages In this blog post, we are going to create a simple and minimalist personal website using Hugo and GitHub Pages. With Github Pages, we can host a personal webpage without bothering about finding a domain name, and with Hugo, we have a variety of themes to choose from. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:0:0","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Create your GitHub repository First, you need to know that the name of your GH account or your repo will determine the URL where your web site will be located. Therefore, I recommend you to take some time to choose it. According to the official documentation you can: Create a user site. Your site will we located at \u003cusername\u003e.github.io. In this case, you need to create an organization and a repo in it with the name \u003cusername\u003e.github.io. Create an organization site. Your site will we located at \u003corg_name\u003e.github.io. In this case, you need to create an organization and a repo in it with the name \u003corg_name\u003e.github.io. Create a repository site. Your site will we located at \u003cusername\u003e.github.io/\u003crepo-name\u003e. . I strongly recommend using option 1 or 2, as this will improve the user experience. You can see my own git repository here. All the information explained in this site is coded there. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:1:0","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Setting up Hugo Hugo is a static site generator that you can use to build content-focussed, fast websites. Static site generators usually allow you to write your content in a simple markup language, like Markdown. The static site generator then converts your content into static HTML files. If you want to set up your first Hugo application, I recommend you to use official Getting Started documentation. If you are lazy and want to copy-paste some commands to install Hugo on Fedora, you can follow these steps: ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:0","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Step 1: Install Hugo sudo dnf install hugo If you have a different distro, check the official documentation. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:1","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Step 2: Generate the repo scaffolding git clone git@github.com:alvarolop/alvarolop.github.io.git cd alvarolop.github.io hugo new site . --force ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:2","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Step 3: Add your theme Now, you need to choose the theme that you want to use in your Hugo website. Access the official repository to check them all. My blog is based on the LoveIt Theme | Hugo, which has extra documentation in the GitHub repository. The full documentation is in their demo site. git submodule add https://github.com/dillonzq/LoveIt.git themes/loveit echo theme # \\\"loveit\\\" \u003e\u003e config.toml Check other interesting themes are: Hugo papermod. Hugo Coder. Full list of themes. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:3","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Step 4: Create your first post Use the new command to generate your first post: hugo new posts/my-first-post.md ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:4","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Step 5: Start the Hugo server locally hugo server -D As shown in the logs, you can check your site at http://localhost:1313. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:2:5","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Setting up GitHub Pages In order to deploy this site on GH Pages, I recommend you to follow the official documentation. GitHub executes your software development workflows. Every time you push your code on the Github repository, Github Actions will build the site automatically. Create a file in .github/workflows/gh-pages.yml containing the following content (based on actions-hugo): Now, for every push, a new action will be created and the contents will be pushed to the gh-pages branch. You can see an example here. ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-your-first-blog/:3:0","tags":["content","Markdown","blog"],"title":"Setting up your first blog","uri":"/2022/06/2022-06-24-your-first-blog/"},{"categories":["documentation"],"content":"Hola! ","date":"2022-06-24","objectID":"/2022/06/2022-06-24-my-first-post/:0:0","tags":["content","Markdown","blog"],"title":"My First Post","uri":"/2022/06/2022-06-24-my-first-post/"},{"categories":[],"content":"About me","date":"0001-01-01","objectID":"/about/","tags":["about","me"],"title":"Readme.txt","uri":"/about/"},{"categories":[],"content":" About me Hi there!! I’m an enthusiastic engineer with a great combination of technical skills and a customer-centric approach. With a telecom background and international experience, I’m currently supporting customers with their open source software technologies at Red Hat Iberia. I’m focused on the Red Hat middleware and application development portfolio: In-memory fast caches, CI/CD, application containerization, Openshift, Kubernetes, GitOps, and Service Mesh. I’m also using Ansible in my daily work. For almost four years, I’ve been guiding the adoption of Red Hat’s solutions in companies from diverse industries such as retail, banking, and insurance. Also, delivering training materials and workshops to support customers in their transformation process to Kubernetes and Caches. Currently onboarding and mentoring a team of Red Hat Data Grid consultants that will participate in projects in the EMEA region. ","date":"0001-01-01","objectID":"/about/:0:0","tags":["about","me"],"title":"Readme.txt","uri":"/about/"}]